
package VIEW;

import CONTROLLER.TASKCONTROLLER;
import MODEL.PROJECTS;
import MODEL.TASK;
import java.text.SimpleDateFormat;
import java.util.Date;
import javax.swing.JOptionPane;
import javax.swing.JTable;

/**
 *Esta classe faz parte do pacote VIEW, onde temos as classes de interface gráfica.
 * Essa classe representa a tela para inserir TASKS.
 * @author victo
 */
public class TaskDialogScreen2 extends javax.swing.JDialog {
    
    /**
     * Criação das variáveis de controle
     */

    TASKCONTROLLER controller;
    PROJECTS project;
    TASK task;
    boolean updateTask;

    public TaskDialogScreen2(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        HideErrorFiels();

        /**
         * Instanciando o objeto controller 
         */
        controller = new TASKCONTROLLER();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPaneltoolbar = new javax.swing.JPanel();
        jLabeltoolbartitle = new javax.swing.JLabel();
        jLabeltoolbarsave = new javax.swing.JLabel();
        jPaneltask = new javax.swing.JPanel();
        jLabelname = new javax.swing.JLabel();
        jTextFieldname = new javax.swing.JTextField();
        jLabeldescription = new javax.swing.JLabel();
        jLabeldeadline = new javax.swing.JLabel();
        jFormattedTextFielddeadline = new javax.swing.JFormattedTextField();
        jLabelnotes = new javax.swing.JLabel();
        jScrollPanedescription = new javax.swing.JScrollPane();
        jTextAreadescription = new javax.swing.JTextArea();
        jScrollPanenotes = new javax.swing.JScrollPane();
        jTextAreanotes = new javax.swing.JTextArea();
        jLabelnameerror = new javax.swing.JLabel();
        jLabeldeadlineerror = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setPreferredSize(new java.awt.Dimension(445, 540));
        setResizable(false);

        jPaneltoolbar.setBackground(new java.awt.Color(0, 153, 102));

        jLabeltoolbartitle.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabeltoolbartitle.setForeground(java.awt.Color.white);
        jLabeltoolbartitle.setText("TAREFA");

        jLabeltoolbarsave.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabeltoolbarsave.setIcon(new javax.swing.ImageIcon(getClass().getResource("/check.png"))); // NOI18N
        jLabeltoolbarsave.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabeltoolbarsaveMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPaneltoolbarLayout = new javax.swing.GroupLayout(jPaneltoolbar);
        jPaneltoolbar.setLayout(jPaneltoolbarLayout);
        jPaneltoolbarLayout.setHorizontalGroup(
            jPaneltoolbarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPaneltoolbarLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabeltoolbartitle, javax.swing.GroupLayout.PREFERRED_SIZE, 337, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabeltoolbarsave, javax.swing.GroupLayout.DEFAULT_SIZE, 88, Short.MAX_VALUE))
        );
        jPaneltoolbarLayout.setVerticalGroup(
            jPaneltoolbarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabeltoolbartitle, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jLabeltoolbarsave, javax.swing.GroupLayout.DEFAULT_SIZE, 71, Short.MAX_VALUE)
        );

        jPaneltask.setBackground(java.awt.Color.white);

        jLabelname.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabelname.setText("Nome");

        jTextFieldname.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldnameActionPerformed(evt);
            }
        });

        jLabeldescription.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabeldescription.setText("Descrição");

        jLabeldeadline.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabeldeadline.setText("Prazo");

        jFormattedTextFielddeadline.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.DateFormatter()));
        jFormattedTextFielddeadline.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jFormattedTextFielddeadlineActionPerformed(evt);
            }
        });

        jLabelnotes.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabelnotes.setText("Notas");

        jTextAreadescription.setColumns(20);
        jTextAreadescription.setRows(5);
        jScrollPanedescription.setViewportView(jTextAreadescription);

        jTextAreanotes.setColumns(20);
        jTextAreanotes.setRows(5);
        jScrollPanenotes.setViewportView(jTextAreanotes);

        jLabelnameerror.setForeground(java.awt.Color.red);
        jLabelnameerror.setText("Este campo é obrigatório *");

        jLabeldeadlineerror.setForeground(java.awt.Color.red);
        jLabeldeadlineerror.setText("Este campo é obrigatório *");

        javax.swing.GroupLayout jPaneltaskLayout = new javax.swing.GroupLayout(jPaneltask);
        jPaneltask.setLayout(jPaneltaskLayout);
        jPaneltaskLayout.setHorizontalGroup(
            jPaneltaskLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPaneltaskLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPaneltaskLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPanenotes, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 425, Short.MAX_VALUE)
                    .addComponent(jScrollPanedescription, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabelname, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jTextFieldname)
                    .addComponent(jLabeldescription, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabeldeadline, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jFormattedTextFielddeadline)
                    .addGroup(jPaneltaskLayout.createSequentialGroup()
                        .addComponent(jLabelnotes)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(jLabelnameerror, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabeldeadlineerror, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPaneltaskLayout.setVerticalGroup(
            jPaneltaskLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPaneltaskLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabelname)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTextFieldname, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabelnameerror)
                .addGap(10, 10, 10)
                .addComponent(jLabeldescription)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPanedescription, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabelnotes)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPanenotes, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabeldeadline)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jFormattedTextFielddeadline, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabeldeadlineerror)
                .addContainerGap(30, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPaneltoolbar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPaneltask, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPaneltoolbar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPaneltask, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jTextFieldnameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldnameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldnameActionPerformed

    private void jLabeltoolbarsaveMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabeltoolbarsaveMouseClicked

        /**
         * Criação do evento para quando clicar no icone + para adicionar os dados inseridos 
         * nessa janela
         */
        try {
            if(!updateTask){
            
            if (isFieldValid()) {

                /**
                 * Criação do objeto TASK
                 */
                     
                TASK task = new TASK();

                task.setID_PROJECT(project.getID());
                task.setNAME(jTextFieldname.getText());
                task.setDESCRIPTION(jTextAreadescription.getText());
                task.setNOTES(jTextAreanotes.getText());
                task.setIS_COMPLETED(false);

                //formatando a data que vai ser inserida no campo deadline.
                SimpleDateFormat dateFormat = new SimpleDateFormat("dd/MM/yyyy");
                Date DEADLINE = null;

                // Aqui temos que converter essa data que é um valor númerico
                //para um texto
                DEADLINE = dateFormat.parse(jFormattedTextFielddeadline.getText());
                task.setDEADLINE(DEADLINE);
                controller.Save(task);

                JOptionPane.showMessageDialog(rootPane, "tarefa salva com sucesso");

                this.dispose();
            
            } else {

                HideErrorFiels();

                if (jTextFieldname.getText().isEmpty()) {
                    jLabelnameerror.setVisible(true);

                }
                if (jFormattedTextFielddeadline.getText().isEmpty()) {
                    jLabeldeadlineerror.setVisible(true);

                }
                }
            } if(updateTask){
                 if (isFieldValid()) {
                
                TASK task = new TASK();

                task.setID_PROJECT(project.getID());
                task.setNAME(jTextFieldname.getText());
                task.setDESCRIPTION(jTextAreadescription.getText());
                task.setNOTES(jTextAreanotes.getText());
                task.setIS_COMPLETED(false);
                SimpleDateFormat dateFormat = new SimpleDateFormat("dd/MM/yyyy");
                Date DEADLINE = null;
                DEADLINE = dateFormat.parse(jFormattedTextFielddeadline.getText());
                task.setDEADLINE(DEADLINE);
                controller.Save(task);

                JOptionPane.showMessageDialog(rootPane, "tarefa atualizada com sucesso");

                updateTask = false;
                
                
                this.dispose();
            
            } else {

                HideErrorFiels();

                if (jTextFieldname.getText().isEmpty()) {
                    jLabelnameerror.setVisible(true);

                }
                if (jFormattedTextFielddeadline.getText().isEmpty()) {
                    jLabeldeadlineerror.setVisible(true);

                }
                
                    
                    }

               
            
            }

        } catch (Exception e) {
            JOptionPane.showMessageDialog(rootPane, e.getMessage());
        }

    }//GEN-LAST:event_jLabeltoolbarsaveMouseClicked

    private void jFormattedTextFielddeadlineActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jFormattedTextFielddeadlineActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jFormattedTextFielddeadlineActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TaskDialogScreen2.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TaskDialogScreen2.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TaskDialogScreen2.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TaskDialogScreen2.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                TaskDialogScreen2 dialog = new TaskDialogScreen2(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JFormattedTextField jFormattedTextFielddeadline;
    private javax.swing.JLabel jLabeldeadline;
    private javax.swing.JLabel jLabeldeadlineerror;
    private javax.swing.JLabel jLabeldescription;
    private javax.swing.JLabel jLabelname;
    private javax.swing.JLabel jLabelnameerror;
    private javax.swing.JLabel jLabelnotes;
    private javax.swing.JLabel jLabeltoolbarsave;
    private javax.swing.JLabel jLabeltoolbartitle;
    private javax.swing.JPanel jPaneltask;
    private javax.swing.JPanel jPaneltoolbar;
    private javax.swing.JScrollPane jScrollPanedescription;
    private javax.swing.JScrollPane jScrollPanenotes;
    private javax.swing.JTextArea jTextAreadescription;
    private javax.swing.JTextArea jTextAreanotes;
    private javax.swing.JTextField jTextFieldname;
    // End of variables declaration//GEN-END:variables

    public void setProject(PROJECTS project) {
        this.project = project;
    }
    
    public void SetTask( TASK task){
        this.task = task;
        
    }

    public void HideErrorFiels() {

        jLabeldeadlineerror.setVisible(false);
        jLabelnameerror.setVisible(false);
    }

    /**
     * Neste método temos que verificar se os campos nome e deadline foram preenchidos
     * para isso usamos o método isEmpty()
     * 
     * @return 
     */
    public boolean isFieldValid() {

        if ((!jTextFieldname.getText().isEmpty()) && (!jFormattedTextFielddeadline.getText().isEmpty())) {
            return true;

        } else {
            return false;
        }
    }
    
    /**
     * nesse método vamos criar uma variável para saber se está sendo feito 
     * um update na task
     * @param task 
     */
    
    public void setupdateTask(TASK task){
        updateTask = true;
        this.task = task;
        
       Date DEADLINE = task.getDEADLINE();
       SimpleDateFormat dateFormat = new SimpleDateFormat("dd/MM/yyyy");
       
       jTextFieldname.setText(task.getNAME());
       jTextAreadescription.setText(task.getDESCRIPTION());
       jTextAreanotes.setText(task.getNOTES());
       jFormattedTextFielddeadline.setText(dateFormat.format(DEADLINE));
      
      
    }
  
    

}
