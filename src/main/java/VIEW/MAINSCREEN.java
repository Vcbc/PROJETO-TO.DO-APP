package VIEW;

import CONTROLLER.PROJECTCONTROLLER;
import CONTROLLER.TASKCONTROLLER;
import MODEL.PROJECTS;
import MODEL.TASK;
import UTIL.BUTTONCOLUNMCELLRENDERER;
import UTIL.DEADLINECOLUMNCELLRENDERER;
import UTIL.TASKTABLEMODEL;
import java.awt.Color;
import java.awt.Font;
import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.List;
import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;
import javax.swing.JTextField;

/**
 *
 * @author victo
 */
public class MAINSCREEN extends javax.swing.JFrame {

    /**
     * Criando variáveis dos objetos controller
     */
    PROJECTCONTROLLER projectController;
    TASKCONTROLLER taskController;

    /**
     * DefaultListModel serve para guardar os dados que vão ser exibidos na
     * tela, ele se comunica com um Jlist. criação da variável taskModel que vai
     * obter as informações do TaskTableModel
     */
    DefaultListModel projectsModel;
    TASKTABLEMODEL taskModel;

    /**
     * Assim que a tela for inicializada, os métodos que estão dentro do
     * MAINSCREEN irão ser executados.
     */
    public MAINSCREEN() {
        initComponents();

        /**
         * inicializando os objetos controller
         */
        initDataController();
        initComponentsModel();
        decorateTableTask();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPaneTasks = new javax.swing.JScrollPane();
        jTableTasks = new javax.swing.JTable();
        jPaneltollbar = new javax.swing.JPanel();
        jLabeltoolbartitle = new javax.swing.JLabel();
        jLabeltoolbarsubtitle = new javax.swing.JLabel();
        jPanelprojects = new javax.swing.JPanel();
        jLabelprojectstitle = new javax.swing.JLabel();
        jLabelprojectsadd = new javax.swing.JLabel();
        jPaneltasks = new javax.swing.JPanel();
        jLabeltaskstitle = new javax.swing.JLabel();
        jLabeltasksadd = new javax.swing.JLabel();
        jPanelprojectlist = new javax.swing.JPanel();
        jScrollPaneprojects = new javax.swing.JScrollPane();
        jListprojects = new javax.swing.JList<>();
        jPanel5 = new javax.swing.JPanel();
        jPanelemptylist = new javax.swing.JPanel();
        jLabelemptylisticon = new javax.swing.JLabel();
        jLabelemptylisttitle = new javax.swing.JLabel();
        jLabelemptylistsubtitle = new javax.swing.JLabel();

        jTableTasks.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jTableTasks.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Nome", "Descrição", "Prazo", "Tarefa Concluida"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Boolean.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, true
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTableTasks.setGridColor(java.awt.Color.white);
        jTableTasks.setRowHeight(50);
        jTableTasks.setSelectionBackground(new java.awt.Color(153, 255, 153));
        jTableTasks.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jTableTasks.setShowVerticalLines(false);
        jTableTasks.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTableTasksMouseClicked(evt);
            }
        });
        jScrollPaneTasks.setViewportView(jTableTasks);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setMinimumSize(new java.awt.Dimension(800, 600));
        setName("painel principal"); // NOI18N

        jPaneltollbar.setBackground(new java.awt.Color(0, 153, 102));
        jPaneltollbar.setName("barra principal"); // NOI18N

        jLabeltoolbartitle.setFont(new java.awt.Font("Segoe UI", 1, 36)); // NOI18N
        jLabeltoolbartitle.setForeground(new java.awt.Color(255, 255, 255));
        jLabeltoolbartitle.setIcon(new javax.swing.ImageIcon(getClass().getResource("/caixa-de-selecao3.png"))); // NOI18N
        jLabeltoolbartitle.setText(" To.Do App");
        jLabeltoolbartitle.setName("app titulo"); // NOI18N

        jLabeltoolbarsubtitle.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabeltoolbarsubtitle.setForeground(new java.awt.Color(255, 255, 255));
        jLabeltoolbarsubtitle.setText("Anote tudo, não esqueça nada!");

        javax.swing.GroupLayout jPaneltollbarLayout = new javax.swing.GroupLayout(jPaneltollbar);
        jPaneltollbar.setLayout(jPaneltollbarLayout);
        jPaneltollbarLayout.setHorizontalGroup(
            jPaneltollbarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPaneltollbarLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPaneltollbarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabeltoolbartitle, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabeltoolbarsubtitle, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPaneltollbarLayout.setVerticalGroup(
            jPaneltollbarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPaneltollbarLayout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addComponent(jLabeltoolbartitle)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 27, Short.MAX_VALUE)
                .addComponent(jLabeltoolbarsubtitle)
                .addContainerGap())
        );

        jLabeltoolbartitle.getAccessibleContext().setAccessibleDescription("");

        jPanelprojects.setBackground(new java.awt.Color(255, 255, 255));
        jPanelprojects.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jPanelprojects.setForeground(new java.awt.Color(255, 255, 255));
        jPanelprojects.setName("painel projetos"); // NOI18N

        jLabelprojectstitle.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabelprojectstitle.setForeground(new java.awt.Color(0, 153, 102));
        jLabelprojectstitle.setText("Projetos");
        jLabelprojectstitle.setName("painel projetos"); // NOI18N

        jLabelprojectsadd.setFont(new java.awt.Font("Segoe UI", 1, 36)); // NOI18N
        jLabelprojectsadd.setForeground(new java.awt.Color(0, 153, 102));
        jLabelprojectsadd.setText("+");
        jLabelprojectsadd.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabelprojectsaddMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanelprojectsLayout = new javax.swing.GroupLayout(jPanelprojects);
        jPanelprojects.setLayout(jPanelprojectsLayout);
        jPanelprojectsLayout.setHorizontalGroup(
            jPanelprojectsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelprojectsLayout.createSequentialGroup()
                .addComponent(jLabelprojectstitle, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabelprojectsadd)
                .addContainerGap())
        );
        jPanelprojectsLayout.setVerticalGroup(
            jPanelprojectsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelprojectsLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelprojectsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabelprojectstitle, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabelprojectsadd, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        jPaneltasks.setBackground(new java.awt.Color(255, 255, 255));
        jPaneltasks.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jLabeltaskstitle.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabeltaskstitle.setForeground(new java.awt.Color(0, 153, 102));
        jLabeltaskstitle.setText("Tarefas");
        jLabeltaskstitle.setName("painel tarefas"); // NOI18N

        jLabeltasksadd.setFont(new java.awt.Font("Segoe UI", 1, 36)); // NOI18N
        jLabeltasksadd.setForeground(new java.awt.Color(0, 153, 102));
        jLabeltasksadd.setText("+");
        jLabeltasksadd.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabeltasksaddMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPaneltasksLayout = new javax.swing.GroupLayout(jPaneltasks);
        jPaneltasks.setLayout(jPaneltasksLayout);
        jPaneltasksLayout.setHorizontalGroup(
            jPaneltasksLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPaneltasksLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabeltaskstitle, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addComponent(jLabeltasksadd, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPaneltasksLayout.setVerticalGroup(
            jPaneltasksLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPaneltasksLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPaneltasksLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabeltaskstitle, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabeltasksadd, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        jPanelprojectlist.setBackground(new java.awt.Color(255, 255, 255));
        jPanelprojectlist.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jListprojects.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jListprojects.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jListprojects.setFixedCellHeight(50);
        jListprojects.setName("itens projetos"); // NOI18N
        jListprojects.setSelectionBackground(new java.awt.Color(0, 153, 102));
        jListprojects.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jListprojectsMouseClicked(evt);
            }
        });
        jScrollPaneprojects.setViewportView(jListprojects);

        javax.swing.GroupLayout jPanelprojectlistLayout = new javax.swing.GroupLayout(jPanelprojectlist);
        jPanelprojectlist.setLayout(jPanelprojectlistLayout);
        jPanelprojectlistLayout.setHorizontalGroup(
            jPanelprojectlistLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelprojectlistLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPaneprojects)
                .addContainerGap())
        );
        jPanelprojectlistLayout.setVerticalGroup(
            jPanelprojectlistLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelprojectlistLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPaneprojects)
                .addContainerGap())
        );

        jPanel5.setBackground(new java.awt.Color(255, 255, 255));
        jPanel5.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jPanel5.setLayout(new java.awt.BorderLayout());

        jPanelemptylist.setBackground(java.awt.Color.white);
        jPanelemptylist.setName("itens tarefas"); // NOI18N

        jLabelemptylisticon.setFont(new java.awt.Font("Segoe UI", 1, 48)); // NOI18N
        jLabelemptylisticon.setForeground(new java.awt.Color(0, 153, 102));
        jLabelemptylisticon.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabelemptylisticon.setIcon(new javax.swing.ImageIcon(getClass().getResource("/list.png"))); // NOI18N

        jLabelemptylisttitle.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabelemptylisttitle.setForeground(new java.awt.Color(0, 153, 102));
        jLabelemptylisttitle.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabelemptylisttitle.setText("Nenhuma tarefa por aqui!!");

        jLabelemptylistsubtitle.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabelemptylistsubtitle.setForeground(new java.awt.Color(153, 153, 153));
        jLabelemptylistsubtitle.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabelemptylistsubtitle.setText("Clique no botão \"+\" para adicionar uma nova tarefa");

        javax.swing.GroupLayout jPanelemptylistLayout = new javax.swing.GroupLayout(jPanelemptylist);
        jPanelemptylist.setLayout(jPanelemptylistLayout);
        jPanelemptylistLayout.setHorizontalGroup(
            jPanelemptylistLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelemptylistLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelemptylistLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabelemptylisticon, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabelemptylisttitle, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabelemptylistsubtitle, javax.swing.GroupLayout.DEFAULT_SIZE, 363, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanelemptylistLayout.setVerticalGroup(
            jPanelemptylistLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelemptylistLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabelemptylisticon)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabelemptylisttitle)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabelemptylistsubtitle)
                .addGap(85, 85, 85))
        );

        jPanel5.add(jPanelemptylist, java.awt.BorderLayout.CENTER);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPaneltollbar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanelprojects, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanelprojectlist, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPaneltasks, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPaneltollbar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanelprojects, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPaneltasks, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanelprojectlist, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * implementação do botão de adicionar projeto
     *
     * @param evt
     */
    private void jLabelprojectsaddMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabelprojectsaddMouseClicked
        /**
         * criamos o objeto da tela de cadastro de projetos.
         */
        ProjectDialogScreen projectDialogScreen = new ProjectDialogScreen(this, rootPaneCheckingEnabled);
        /**
         * aqui tornamos esta tela visível.
         */
        projectDialogScreen.setVisible(true);

        /**
         * colocamos um ouvinte nesta janela, ele ira recarregar a lista de
         * projetos assim que o botão de adicionar projeto for pressionado.
         */
        projectDialogScreen.addWindowListener(new WindowAdapter() {
            @Override
            public void windowClosed(WindowEvent e) {
                LoadProjects();
            }

        });

    }//GEN-LAST:event_jLabelprojectsaddMouseClicked

    private void jLabeltasksaddMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabeltasksaddMouseClicked

        /**
         * criação do objeto da tela de cadastro de tarefas
         */
        
        TaskDialogScreen2 taskDialogScreen2 = new TaskDialogScreen2(this, rootPaneCheckingEnabled);

        
        /**
         * criação da variável que indica qual projeto está selecionado para
         * adicionar neste projeto uma tarefa
         */
        int projectIndex = jListprojects.getSelectedIndex();

        PROJECTS projects = (PROJECTS) projectsModel.get(projectIndex);
        taskDialogScreen2.setProject(projects);
        

        taskDialogScreen2.setVisible(true);

        taskDialogScreen2.addWindowListener(new WindowAdapter() {
            @Override
            public void windowClosed(WindowEvent e) {
                int projectIndex = jListprojects.getSelectedIndex();
                PROJECTS project = (PROJECTS) projectsModel.get(projectIndex);
                LoadTasks(project.getID());

            }

        });

    }//GEN-LAST:event_jLabeltasksaddMouseClicked

    private void jTableTasksMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTableTasksMouseClicked

        /**
         * aqui vamos criar 2 variáveis que atribuem a ela a linha e a
         * coluna que foi clicado na tela evt é um parametro que o método pede
         */
        int rowIndex = jTableTasks.rowAtPoint(evt.getPoint());
        int columnIndex = jTableTasks.columnAtPoint(evt.getPoint());
        TASK task = taskModel.getTasks().get(rowIndex);
        
        
        switch (columnIndex) {

            case 4:

                /**
                 * coluna 4 para fazer a edição da tarefa
                 */
                TaskDialogScreen2 taskDialogScreen2 = new TaskDialogScreen2(this, rootPaneCheckingEnabled);
                
                 int projectIndex = jListprojects.getSelectedIndex();

                PROJECTS projects = (PROJECTS) projectsModel.get(projectIndex);
                
                taskDialogScreen2.setProject(projects);
                
                taskDialogScreen2.setupdateTask(task);
                taskDialogScreen2.setVisible(true);

                taskDialogScreen2.addWindowListener(new WindowAdapter() {
                    @Override
                    public void windowClosed(WindowEvent e) {
                        int projectIndex = jListprojects.getSelectedIndex();
                        PROJECTS project = (PROJECTS) projectsModel.get(projectIndex);
                        LoadTasks(project.getID());}
                        
                        

                    }); 
                  
                
        case 5:
                /**
                 * coluna 5 para remover a tarefa 
                 */
                
                taskController.removeByID(task.getID());
                taskModel.getTasks().remove(task);

                int projectIndex2 = jListprojects.getSelectedIndex();
                PROJECTS project = (PROJECTS) projectsModel.get(projectIndex2);
                LoadTasks(project.getID());
                break;

        }
        
        
    }//GEN-LAST:event_jTableTasksMouseClicked

    private void jListprojectsMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jListprojectsMouseClicked
        
        /**
         * criação do evento em que quando clicamos em cada projeto no Jlist
         * carrega as tarefas baseadas na ID do projeto que clicamos
         */
        int projectIndex = jListprojects.getSelectedIndex();
        
        /**
         * aqui nesta linha temos que fazer um CAST(conversão de tipo de variável)
         * nesse caso quando chamamos o método GET, ele vai trazer a informação que
         * está dentro dos parenteses, no caso (PROJECT).
         */
        PROJECTS project = (PROJECTS) projectsModel.get(projectIndex);
        LoadTasks(project.getID());
    }//GEN-LAST:event_jListprojectsMouseClicked

    /**
     * @param args the command line arguments
     */
    

    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Java swing".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MAINSCREEN.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MAINSCREEN.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MAINSCREEN.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MAINSCREEN.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MAINSCREEN().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabelemptylisticon;
    private javax.swing.JLabel jLabelemptylistsubtitle;
    private javax.swing.JLabel jLabelemptylisttitle;
    private javax.swing.JLabel jLabelprojectsadd;
    private javax.swing.JLabel jLabelprojectstitle;
    private javax.swing.JLabel jLabeltasksadd;
    private javax.swing.JLabel jLabeltaskstitle;
    private javax.swing.JLabel jLabeltoolbarsubtitle;
    private javax.swing.JLabel jLabeltoolbartitle;
    private javax.swing.JList<String> jListprojects;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanelemptylist;
    private javax.swing.JPanel jPanelprojectlist;
    private javax.swing.JPanel jPanelprojects;
    private javax.swing.JPanel jPaneltasks;
    private javax.swing.JPanel jPaneltollbar;
    private javax.swing.JScrollPane jScrollPaneTasks;
    private javax.swing.JScrollPane jScrollPaneprojects;
    private javax.swing.JTable jTableTasks;
    // End of variables declaration//GEN-END:variables

    //Antes de implementar este método ir no Bloco de código de LOOK AND FEEL
    //  e mudar a palavra "NIMBUS" para "Java swing".
    /**
     * Este método serve para mudar a visualização do Header das tarefas
     */
    public void decorateTableTask() {
        //mudar fonte 
        jTableTasks.getTableHeader().setFont(new Font("Segoe UI", Font.BOLD, 14));
        //mudar a cor do background para verde
        jTableTasks.getTableHeader().setBackground(new Color(0, 153, 102));
        //mudar a cor do foreground para branco
        jTableTasks.getTableHeader().setForeground(new Color(255, 255, 255));
        jTableTasks.getColumnModel().getColumn(2).setCellRenderer(new DEADLINECOLUMNCELLRENDERER());

        jTableTasks.getColumnModel().getColumn(4).setCellRenderer(new BUTTONCOLUNMCELLRENDERER("pencil"));
        jTableTasks.getColumnModel().getColumn(5).setCellRenderer(new BUTTONCOLUNMCELLRENDERER("close"));

        // criando um organizador automático para as tarefas.
        jTableTasks.setAutoCreateRowSorter(true);
    }

    /**
     * Criando um método para instanciar as variáveis de controle pois se a
     * aplicação crescer demais, podemos apenas chamar o método.
     */
    public void initDataController() {
        projectController = new PROJECTCONTROLLER();
        taskController = new TASKCONTROLLER();

    }

    public void initComponentsModel() {
        /**
         * instanciando o objeto DefaultListModel
         */
        projectsModel = new DefaultListModel();

        /**
         * chamando o método LoadProjects, para apresentar todos os projetos.
         */
        LoadProjects();

        /**
         * instanciando a classe TaskTableModel
         */
        taskModel = new TASKTABLEMODEL();
        /**
         * setando as informações que implememtamos no TasktableModel
         */
        jTableTasks.setModel(taskModel);
        //LoadTasks(3);

        if (!projectsModel.isEmpty()) {
            jListprojects.setSelectedIndex(0);
            PROJECTS projects = (PROJECTS) projectsModel.get(0);
            LoadTasks(projects.getID());

        }
    }

    /**
     * este método vai carregar as tarefas e jogar elas dentro do tableModel
     *
     * @param PROJECT_ID
     */
    public void LoadTasks(int PROJECT_ID) {
        /**
         * criação de lista para pegar todas as tarefas do banco, com base no
         * Project_id
         */
        List<TASK> tasks = taskController.getAll(PROJECT_ID);
        /**
         * aqui vamos setar as tarefas que estão no taskmodel
         */
        taskModel.setTasks(tasks);

        showJTableTasks(!tasks.isEmpty());

    }
    
   

    private void showJTableTasks(boolean hasTasks) {

        if (hasTasks) {
            //se existem tarefas executa o código abaixo
            if (jPanelemptylist.isVisible()) {
                jPanelemptylist.setVisible(false);
                jPanel5.remove(jPanelemptylist);
                // se a tela tiver tarefa, remove o icone de emptylist
            }
            // adiciona na tela o scrollPane de tarefas
            jPanel5.add(jScrollPaneTasks);
            jScrollPaneTasks.setVisible(true); // torna o ScrollPane visivel 
            jScrollPaneTasks.setSize(jPanel5.getWidth(), jPanel5.getHeight()); // ajusta o tamanho do ScrollPane

        } else {
            //senão tiver tarefas, e o ScrollPane tiver visivel
            if (jScrollPaneTasks.isVisible()) {
                jScrollPaneTasks.setVisible(false); // torna o ScrollPane invisivel
                jScrollPaneTasks.remove(jScrollPaneTasks); //retira o ScrollPane da tela
            }
            jPanel5.add(jPanelemptylist); //traz o icone de emptylist
            jPanelemptylist.setVisible(true); // torna o emptylist visivel
            jPanelemptylist.setSize(jPanel5.getWidth(), jPanel5.getHeight()); // ajusta o tamanho do emptylist
        }

    }

    /**
     * método para carregar os projetos do banco de dados.
     */
    public void LoadProjects() {

        /**
         * criação da lista para guardar os projetos, já com o método GETALL
         * para pegar todos os projetos que estão na lista.
         *
         */
        List<PROJECTS> Projects = projectController.getall();

        /**
         * após mostrar todos os projetos que estão na lista, limpamos a
         * lista.(?)
         */
        projectsModel.clear();

        /**
         * aqui vamos carregar os projetos do banco no projectsmodel.
         */
        for (int i = 0; i < Projects.size(); i++) {
            PROJECTS project = Projects.get(i);
            projectsModel.addElement(project);

        }

        /**
         * aqui vamos pedir ao componente gráfico para exibir as informações que
         * estão no projectsModel, ou seja, estamos mudando o Model que o Jlist
         * vai obter as informações (projetos).
         */
        jListprojects.setModel(projectsModel);

    }
    
 

}
